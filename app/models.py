from sqlalchemy import Column, Integer, String, Boolean, Float, Text, ForeignKey
from sqlalchemy.orm import relationship
from .database import Base

class Reviewer(Base):
    __tablename__ = 'reviewer'
    reviewer_id = Column(Integer, primary_key=True, index=True)
    reviewer_name = Column(String(255))
    skin_type_oily = Column(Boolean)
    skin_type_dry = Column(Boolean)
    skin_type_sensitive = Column(Boolean)
    skin_type_combination = Column(Boolean)
    skin_concern_acne = Column(Boolean)
    skin_concern_pigmentation = Column(Boolean)
    skin_concern_blackhead = Column(Boolean)
    skin_concern_redness = Column(Boolean)
    skin_concern_wrinkles_whitening = Column(Boolean)
    cleansing_power_very_satisfied = Column(Boolean)
    cleansing_power_average = Column(Boolean)
    cleansing_power_somewhat_disappointed = Column(Boolean)
    cleansing_power_very_disappointed = Column(Boolean)
    irritation_level_no_irritation = Column(Boolean)
    irritation_level_slight_irritation = Column(Boolean)
    irritation_level_moderate_irritation = Column(Boolean)
    irritation_level_severe_irritation = Column(Boolean)
    absorption_power_very_satisfied = Column(Boolean)
    absorption_power_average = Column(Boolean)
    absorption_power_somewhat_disappointed = Column(Boolean)
    absorption_power_very_disappointed = Column(Boolean)
    texture_power_very_satisfied = Column(Boolean)
    texture_power_average = Column(Boolean)
    texture_power_somewhat_disappointed = Column(Boolean)
    texture_power_very_disappointed = Column(Boolean)
    
    reviews = relationship("Review", back_populates="reviewer")

class Product(Base):
    __tablename__ = 'product'
    product_id = Column(Integer, primary_key=True, index=True)
    product_name = Column(String(255))
    product_category = Column(String(255))
    brand_name = Column(String(255))
    original_price = Column(Integer)
    final_price = Column(Integer)
    number_of_reviews = Column(Integer)
    review_rating = Column(Float)
    review_5_star_ratio = Column(Float)
    review_4_star_ratio = Column(Float)
    review_3_star_ratio = Column(Float)
    review_2_star_ratio = Column(Float)
    review_1_star_ratio = Column(Float)
    skin_type_dry = Column(Integer)
    skin_type_sensitive = Column(Integer)
    skin_type_oily = Column(Integer)
    skin_type_combination = Column(Integer)
    skin_concern_acne = Column(Integer)
    skin_concern_pigmentation = Column(Integer)
    skin_concern_blackhead = Column(Integer)
    skin_concern_redness = Column(Integer)
    skin_concern_wrinkles_whitening = Column(Integer)
    cleansing_power_very_satisfied = Column(Integer)
    cleansing_power_average = Column(Integer)
    cleansing_power_somewhat_disappointed = Column(Integer)
    cleansing_power_very_disappointed = Column(Integer)
    irritation_level_no_irritation = Column(Integer)
    irritation_level_slight_irritation = Column(Integer)
    irritation_level_moderate_irritation = Column(Integer)
    irritation_level_severe_irritation = Column(Integer)
    absorption_power_very_satisfied = Column(Integer)
    absorption_power_average = Column(Integer)
    absorption_power_somewhat_disappointed = Column(Integer)
    absorption_power_very_disappointed = Column(Integer)
    texture_power_very_satisfied = Column(Integer)
    texture_power_average = Column(Integer)
    texture_power_somewhat_disappointed = Column(Integer)
    texture_power_very_disappointed = Column(Integer)

    reviews = relationship("Review", back_populates="product")

class Review(Base):
    __tablename__ = 'review'
    review_id = Column(Integer, primary_key=True, index=True)
    product_id = Column(Integer, ForeignKey('product.product_id'))
    reviewer_id = Column(Integer, ForeignKey('reviewer.reviewer_id'))
    star = Column(Integer)
    long_term_use = Column(Boolean)
    repurchase = Column(Boolean)
    skin_type = Column(String(255))
    skin_concern = Column(String(255))
    irritation_level = Column(String(255))
    cleansing_power = Column(String(255))
    absorption_power = Column(String(255))
    texture_power = Column(String(255))
    review_content = Column(Text)

    reviewer = relationship("Reviewer", back_populates="reviews")
    product = relationship("Product", back_populates="reviews")
